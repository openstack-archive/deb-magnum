heat_template_version: 2013-05-23

description: >
  This template will boot a Kubernetes cluster with one or more
  minions (as specified by the number_of_minions parameter, which
  defaults to 1).

parameters:

  ssh_key_name:
    type: string
    description: name of ssh key to be provisioned on our server

  external_network:
    type: string
    description: uuid/name of a network to use for floating ip addresses

  fixed_network:
    type: string
    description: >
      name of private network into which servers get deployed
      Important: the Load Balancer feature in Kubernetes requires that
      the name for the fixed_network must be "private" for the
      address lookup in Kubernetes to work properly

  server_image:
    type: string
    default: fedora-k8s
    description: glance image used to boot the server

  server_flavor:
    type: string
    default: baremetal
    description: flavor to use when booting the server

  number_of_minions:
    type: number
    description: how many kubernetes minions to spawn
    default: 1

  portal_network_cidr:
    type: string
    description: >
      address range used by kubernetes for service portals
    default: 10.254.0.0/16

  flannel_network_cidr:
    type: string
    description: network range for flannel overlay network
    default: 10.100.0.0/16

  flannel_network_subnetlen:
    type: string
    description: size of subnet assigned to each minion
    default: 24

  flannel_use_vxlan:
    type: string
    description: >
      if true use the vxlan backend, otherwise use the default
      udp backend
    default: "false"
    constraints:
      - allowed_values: ["true", "false"]

  kube_allow_priv:
    type: string
    description: >
      whether or not kubernetes should permit privileged containers.
    default: "true"
    constraints:
      - allowed_values: ["true", "false"]

  minions_to_remove:
    type: comma_delimited_list
    description: >
      List of minions to be removed when doing an update. Individual minion may
      be referenced several ways: (1) The resource name (e.g. ['1', '3']),
      (2) The private IP address ['10.0.0.4', '10.0.0.6']. Note: the list should
      be empty when doing an create.
    default: []

  wait_condition_timeout:
    type: number
    description : >
      timeout for the Wait Conditions
    default: 6000

  auth_url:
    type: string
    description: url for keystone

  username:
    type: string
    description: >
      user account

  password:
    type: string
    description: >
      user password, not set in current implementation, only used to
      fill in for Kubernetes config file
    default:
      ChangeMe
    hidden: true

  tenant_name:
    type: string
    description: >
      tenant name

  trustee_domain_id:
    type: string
    description: domain id of the trustee
    default: ""

  trustee_user_id:
    type: string
    description: user id of the trustee
    default: ""

  trustee_username:
    type: string
    description: username of the trustee
    default: ""

  trustee_password:
    type: string
    description: password of the trustee
    default: ""
    hidden: true

  trust_id:
    type: string
    description: id of the trust which is used by the trustee
    default: ""
    hidden: true

resources:

  ######################################################################
  #
  # kubernetes masters. This is a resource group that will create
  # 1 master.
  #

  kube_master:
    type: OS::Heat::ResourceGroup
    depends_on:
      - extrouter_inside
    properties:
      count: 1
      resource_def:
        type: kubemaster.yaml
        properties:
          ssh_key_name: {get_param: ssh_key_name}
          server_image: {get_param: server_image}
          master_flavor: {get_param: master_flavor}
          external_network: {get_param: external_network}
          kube_allow_priv: {get_param: kube_allow_priv}
          wait_condition_timeout: {get_param: wait_condition_timeout}
          flannel_network_cidr: {get_param: flannel_network_cidr}
          flannel_network_subnetlen: {get_param: flannel_network_subnetlen}
          flannel_use_vxlan: {get_param: flannel_use_vxlan}
          portal_network_cidr: {get_param: portal_network_cidr}
          fixed_network: {get_resource: fixed_network}
          auth_url: {get_param: auth_url}
          username: {get_param: username}
          password: {get_param: password}
          tenant_name: {get_param: tenant_name}

  kube_minions:
    type: OS::Heat::ResourceGroup
    depends_on:
      - kube_master
    properties:
      count: {get_param: number_of_minions}
      removal_policies: [{resource_list: {get_param: minions_to_remove}}]
      resource_def:
        type: kubeminion-fedora-ironic.yaml
        properties:
          ssh_key_name: {get_param: ssh_key_name}
          server_image: {get_param: server_image}
          server_flavor: {get_param: server_flavor}
          fixed_network: {get_param: fixed_network}
          kube_master_ip: {get_attr: [kube_master, kube_master_external_ip]}
          external_network: {get_param: external_network}
          kube_allow_priv: {get_param: kube_allow_priv}

outputs:

  api_address:
    value: {get_attr: [kube_master, kube_master_external_ip]}

  kube_masters_private:
    value: {get_attr: [kube_master, kube_master_ip]}

  kube_masters:
    value: {get_attr: [kube_master, kube_master_external_ip]}

  kube_minions_private:
    value: {get_attr: [kube_minions, kube_node_ip]}

  kube_minions:
    value: {get_attr: [kube_minions, kube_node_external_ip]}

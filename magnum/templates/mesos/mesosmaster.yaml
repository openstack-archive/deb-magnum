heat_template_version: 2013-05-23

description: >
  This is a nested stack that defines a single Mesos master, This stack is
  included by a ResourceGroup resource in the parent template
  (mesoscluster.yaml).

parameters:

  server_image:
    type: string
    description: glance image used to boot the server

  master_flavor:
    type: string
    default: m1.small
    description: flavor to use when booting the server

  ssh_key_name:
    type: string
    description: name of ssh key to be provisioned on our server

  external_network:
    type: string
    description: uuid/name of a network to use for floating ip addresses

  # The following are all generated in the parent template.
  fixed_network:
    type: string
    description: Network from which to allocate fixed addresses.
  fixed_subnet:
    type: string
    description: Subnet from which to allocate fixed addresses.
  secgroup_base_id:
    type: string
    description: ID of the security group for base.
  secgroup_mesos_id:
    type: string
    description: ID of the security group for mesos master.
  api_pool_id:
    type: string
    description: ID of the load balancer pool of Marathon.

resources:

  ######################################################################
  #
  # Mesos master server.
  #

  mesos_master:
    type: OS::Nova::Server
    properties:
      image: {get_param: server_image}
      flavor: {get_param: master_flavor}
      key_name: {get_param: ssh_key_name}
      user_data_format: SOFTWARE_CONFIG
      networks:
        - port: {get_resource: mesos_master_eth0}

  mesos_master_eth0:
    type: OS::Neutron::Port
    properties:
      network: {get_param: fixed_network}
      security_groups:
        - {get_param: secgroup_base_id}
        - {get_param: secgroup_mesos_id}
      fixed_ips:
        - subnet: {get_param: fixed_subnet}
      replacement_policy: AUTO

  mesos_master_floating:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: {get_param: external_network}
      port_id: {get_resource: mesos_master_eth0}

  api_pool_member:
    type: OS::Neutron::PoolMember
    properties:
      pool_id: {get_param: api_pool_id}
      address: {get_attr: [mesos_master_eth0, fixed_ips, 0, ip_address]}
      protocol_port: 8080

outputs:

  mesos_master_ip:
    value: {get_attr: [mesos_master_eth0, fixed_ips, 0, ip_address]}

  mesos_master_external_ip:
    value: {get_attr: [mesos_master_floating, floating_ip_address]}

  mesos_server_id:
    value: {get_resource: mesos_master}

heat_template_version: 2014-10-16

description: >
  This template will boot a Mesos cluster with one or more slaves
  (as specified by the number_of_slaves parameter, which
  defaults to 1).

parameters:

  ssh_key_name:
    type: string
    description: name of ssh key to be provisioned on our server

  external_network:
    type: string
    description: uuid/name of a network to use for floating ip addresses
    default: public

  server_image:
    type: string
    default: ubuntu-mesos
    description: glance image used to boot the server

  master_flavor:
    type: string
    default: m1.small
    description: flavor to use when booting the server

  slave_flavor:
    type: string
    default: m1.small
    description: flavor to use when booting the server

  dns_nameserver:
    type: string
    description: address of a dns nameserver reachable in your environment
    default: 8.8.8.8

  number_of_slaves:
    type: number
    description: how many mesos slaves to spawn initially
    default: 1

  fixed_network_cidr:
    type: string
    description: network range for fixed ip network
    default: 10.0.0.0/24

  wait_condition_timeout:
    type: number
    description: >
      timeout for the Wait Conditions
    default: 6000

  cluster_name:
    type: string
    description: human readable name for the mesos cluster
    default: my-cluster

  executor_registration_timeout:
    type: string
    description: >
      Amount of time to wait for an executor to register with the slave before
      considering it hung and shutting it down
    default: 5mins

resources:

  ######################################################################
  #
  # network resources.  allocate a network and router for our server.
  #

  fixed_network:
    type: OS::Neutron::Net

  fixed_subnet:
    type: OS::Neutron::Subnet
    properties:
      cidr: {get_param: fixed_network_cidr}
      network: {get_resource: fixed_network}
      dns_nameservers:
        - {get_param: dns_nameserver}

  extrouter:
    type: OS::Neutron::Router
    properties:
      external_gateway_info:
        network: {get_param: external_network}

  extrouter_inside:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: {get_resource: extrouter}
      subnet: {get_resource: fixed_subnet}

  ######################################################################
  #
  # security groups.  we need to permit network traffic of various
  # sorts.
  #

  secgroup_base:
    type: OS::Neutron::SecurityGroup
    properties:
      rules:
        - protocol: icmp
        - protocol: tcp
          port_range_min: 22
          port_range_max: 22

  secgroup_mesos:
    type: OS::Neutron::SecurityGroup
    properties:
      rules:
        - protocol: tcp
          port_range_min: 2181
          port_range_max: 2181
        - protocol: tcp
          port_range_min: 2888
          port_range_max: 2888
          remote_mode: remote_group_id
        - protocol: tcp
          port_range_min: 3888
          port_range_max: 3888
          remote_mode: remote_group_id
        - protocol: tcp
          port_range_min: 5050
          port_range_max: 5050
        - protocol: tcp
          port_range_min: 8080
          port_range_max: 8080

  ######################################################################
  #
  # Mesos masters. This is a resource group that will create 1 master.
  #

  mesos_masters:
    type: OS::Heat::ResourceGroup
    depends_on:
      - extrouter_inside
    properties:
      count: 1
      resource_def:
        type: mesosmaster.yaml
        properties:
          ssh_key_name: {get_param: ssh_key_name}
          server_image: {get_param: server_image}
          master_flavor: {get_param: master_flavor}
          external_network: {get_param: external_network}
          cluster_name: {get_param: cluster_name}
          wait_condition_timeout: {get_param: wait_condition_timeout}
          fixed_network: {get_resource: fixed_network}
          fixed_subnet: {get_resource: fixed_subnet}
          secgroup_base_id: {get_resource: secgroup_base}
          secgroup_mesos_id: {get_resource: secgroup_mesos}

  ######################################################################
  #
  # Mesos slaves. This is a resource group that will initially
  # create <number_of_slaves> slaves, and needs to be manually scaled.
  #

  mesos_slaves:
    type: OS::Heat::ResourceGroup
    depends_on:
      - extrouter_inside
      - mesos_masters
    properties:
      count: {get_param: number_of_slaves}
      resource_def:
        type: mesosslave.yaml
        properties:
          ssh_key_name: {get_param: ssh_key_name}
          server_image: {get_param: server_image}
          slave_flavor: {get_param: slave_flavor}
          fixed_network: {get_resource: fixed_network}
          fixed_subnet: {get_resource: fixed_subnet}
          mesos_master_ip: {'Fn::Select': [0, {get_attr: [mesos_masters, mesos_master_ip]}]}
          external_network: {get_param: external_network}
          wait_condition_timeout: {get_param: wait_condition_timeout}
          executor_registration_timeout: {get_param: executor_registration_timeout}

outputs:

  api_address:
    value: {'Fn::Select': [0, {get_attr: [mesos_masters, mesos_master_external_ip]}]}
    description: >
      This is the API endpoint of the Mesos master. Use this to access
      the Mesos API from outside the cluster.

  mesos_master_private:
    value: {get_attr: [mesos_masters, mesos_master_ip]}
    description: >
      This is a list of the "private" addresses of all the Mesos masters.

  mesos_master:
    value: {get_attr: [mesos_masters, mesos_master_external_ip]}
    description: >
      This is the "public" ip address of the Mesos master server.  Use this address to
      log in to the Mesos master via ssh or to access the Mesos API
      from outside the cluster.

  mesos_slaves_private:
    value: {get_attr: [mesos_slaves, mesos_slave_ip]}
    description: >
      This is a list of the "private" addresses of all the Mesos agents.

  mesos_slaves:
    value: {get_attr: [mesos_slaves, mesos_slave_external_ip]}
    description: >
      This is a list of the "public" addresses of all the Mesos agents.
